#!/usr/bin/env python3
"""
AUTOMATIC AIXLIB INSTALLER FOR OPENMODELICA
===========================================

This script automatically downloads and installs AixLib for OpenModelica
"""

import os
import zipfile
import requests
from pathlib import Path
import tempfile

def download_aixlib(install_directory=None):
    """
    Automatically download AixLib from GitHub
    
    Args:
        install_directory: Where to install AixLib (default: temp directory)
    """
    
    print("üì¶ DOWNLOADING AIXLIB FROM GITHUB")
    print("=" * 50)
    
    # GitHub release URL for AixLib
    github_url = "https://github.com/RWTH-EBC/AixLib/archive/refs/heads/master.zip"
    
    if install_directory is None:
        install_directory = Path.home() / "OpenModelica" / "Libraries"
        install_directory.mkdir(parents=True, exist_ok=True)
    
    install_path = Path(install_directory)
    
    try:
        print(f"üìç Download URL: {github_url}")
        print(f"üìÇ Install location: {install_path}")
        
        # Download the ZIP file
        print("‚¨áÔ∏è Downloading AixLib...")
        response = requests.get(github_url, stream=True)
        response.raise_for_status()
        
        # Save to temporary file
        with tempfile.NamedTemporaryFile(delete=False, suffix='.zip') as temp_file:
            for chunk in response.iter_content(chunk_size=8192):
                temp_file.write(chunk)
            temp_zip_path = temp_file.name
        
        print("‚úÖ Download completed!")
        
        # Extract the ZIP file
        print("üìÇ Extracting AixLib...")
        with zipfile.ZipFile(temp_zip_path, 'r') as zip_ref:
            zip_ref.extractall(install_path)
        
        # Find the extracted folder (usually AixLib-master)
        extracted_folders = [d for d in install_path.iterdir() 
                           if d.is_dir() and 'aixlib' in d.name.lower()]
        
        if extracted_folders:
            aixlib_path = extracted_folders[0]
            print(f"‚úÖ AixLib extracted to: {aixlib_path}")
            
            # Check if package.mo exists
            package_mo = aixlib_path / "package.mo"
            if package_mo.exists():
                print(f"‚úÖ Found package.mo: {package_mo}")
                return aixlib_path
            else:
                print(f"‚ùå package.mo not found in {aixlib_path}")
                return None
        else:
            print("‚ùå Could not find extracted AixLib folder")
            return None
            
    except Exception as e:
        print(f"‚ùå Download failed: {e}")
        return None
    
    finally:
        # Clean up temporary file
        if 'temp_zip_path' in locals():
            try:
                os.unlink(temp_zip_path)
            except:
                pass

def install_aixlib_in_openmodelica(aixlib_path):
    """
    Install AixLib in OpenModelica using OMPython
    
    Args:
        aixlib_path: Path to AixLib directory containing package.mo
    """
    
    print("\nüîß INSTALLING AIXLIB IN OPENMODELICA")
    print("=" * 50)
    
    try:
        from OMPython import OMCSessionZMQ
        
        omc = OMCSessionZMQ()
        print("‚úÖ Connected to OpenModelica")
        
        # Load AixLib
        package_mo_path = aixlib_path / "package.mo"
        print(f"üì¶ Loading AixLib from: {package_mo_path}")
        
        load_result = omc.sendExpression(f'loadFile("{package_mo_path}")')
        print(f"Load result: {load_result}")
        
        if load_result:
            # Verify AixLib is loaded
            is_loaded = omc.sendExpression("isPackage(AixLib)")
            if is_loaded:
                print("‚úÖ AixLib successfully installed!")
                
                # Get AixLib version info
                try:
                    version_info = omc.sendExpression("getVersion(AixLib)")
                    print(f"üìã AixLib version: {version_info}")
                except:
                    print("üìã AixLib loaded (version info not available)")
                
                return True
            else:
                print("‚ùå AixLib package not recognized")
                return False
        else:
            print("‚ùå Failed to load AixLib")
            errors = omc.sendExpression("getErrorString()")
            if errors:
                print(f"Errors: {errors}")
            return False
            
    except ImportError:
        print("‚ùå OMPython not available")
        return False
    except Exception as e:
        print(f"‚ùå Installation failed: {e}")
        return False

def test_aixlib_installation():
    """
    Test if AixLib is working with a simple model
    """
    
    print("\nüß™ TESTING AIXLIB INSTALLATION")
    print("=" * 50)
    
    try:
        from OMPython import OMCSessionZMQ
        
        omc = OMCSessionZMQ()
        
        # Test basic AixLib functionality
        tests = [
            ("Load Modelica", "loadModel(Modelica)"),
            ("Load AixLib", "loadModel(AixLib)"),
            ("Check AixLib package", "isPackage(AixLib)"),
            ("List AixLib subpackages", "getPackages(AixLib)")
        ]
        
        results = {}
        for test_name, command in tests:
            try:
                result = omc.sendExpression(command)
                results[test_name] = result
                status = "‚úÖ" if result else "‚ùå"
                print(f"{status} {test_name}: {result}")
            except Exception as e:
                results[test_name] = f"Error: {e}"
                print(f"‚ùå {test_name}: Error - {e}")
        
        # Overall assessment
        if results.get("Check AixLib package"):
            print("\nüéâ AIXLIB INSTALLATION SUCCESSFUL!")
            print("You can now use AixLib with your TEASER models!")
            return True
        else:
            print("\n‚ùå AixLib installation needs troubleshooting")
            return False
            
    except Exception as e:
        print(f"‚ùå Test failed: {e}")
        return False

def complete_aixlib_setup():
    """
    Complete AixLib setup process
    """
    
    print("üöÄ COMPLETE AIXLIB SETUP FOR TEASER")
    print("=" * 60)
    
    # Step 1: Download AixLib
    aixlib_path = download_aixlib()
    if not aixlib_path:
        print("‚ùå Failed to download AixLib")
        return False
    
    # Step 2: Install in OpenModelica
    install_success = install_aixlib_in_openmodelica(aixlib_path)
    if not install_success:
        print("‚ùå Failed to install AixLib in OpenModelica")
        return False
    
    # Step 3: Test installation
    test_success = test_aixlib_installation()
    if not test_success:
        print("‚ùå AixLib installation test failed")
        return False
    
    print("\n" + "=" * 60)
    print("üéâ SUCCESS! AIXLIB IS NOW READY FOR TEASER!")
    print("=" * 60)
    print("‚úÖ AixLib downloaded and installed")
    print("‚úÖ OpenModelica can access AixLib")
    print("‚úÖ Ready to simulate TEASER models")
    
    print("\nüìã NEXT STEPS:")
    print("1. Go back to your TEASER ‚Üí OpenModelica simulation script")
    print("2. Run it again - AixLib should now be available")
    print("3. Your building simulations should work!")
    
    return True

def manual_installation_guide():
    """
    Provide manual installation instructions
    """
    
    print("üìñ MANUAL AIXLIB INSTALLATION GUIDE")
    print("=" * 50)
    
    print("""
    If the automatic installation doesn't work, follow these manual steps:
    
    1Ô∏è‚É£ DOWNLOAD AIXLIB:
       ‚Ä¢ Go to: https://github.com/RWTH-EBC/AixLib
       ‚Ä¢ Click "Code" ‚Üí "Download ZIP"
       ‚Ä¢ Extract to C:\\AixLib-master\\
    
    2Ô∏è‚É£ INSTALL IN OPENMODELICA:
       ‚Ä¢ Open OMEdit (OpenModelica Connection Editor)
       ‚Ä¢ Go to File ‚Üí Load Library
       ‚Ä¢ Navigate to C:\\AixLib-master\\
       ‚Ä¢ Select "package.mo"
       ‚Ä¢ Click "Open"
    
    3Ô∏è‚É£ VERIFY INSTALLATION:
       ‚Ä¢ In OMEdit, check if "AixLib" appears in the Libraries Browser
       ‚Ä¢ You should see AixLib with various subpackages
    
    4Ô∏è‚É£ TEST WITH PYTHON:
       ‚Ä¢ Run your simulation script again
       ‚Ä¢ AixLib should now be available
    
    üîß TROUBLESHOOTING:
       ‚Ä¢ If OMEdit won't open: Check OpenModelica installation
       ‚Ä¢ If package.mo won't load: Try downloading a different AixLib version
       ‚Ä¢ If still doesn't work: Try the IBPSA export method instead
    """)

if __name__ == "__main__":
    # Run the complete setup
    success = complete_aixlib_setup()
    
    if not success:
        print("\n" + "=" * 60)
        print("‚ö†Ô∏è  AUTOMATIC INSTALLATION FAILED")
        manual_installation_guide()
        
        print("\nALTERNATIVE: Use IBPSA export instead")
        print("Change your TEASER export to: prj.export_ibpsa()")